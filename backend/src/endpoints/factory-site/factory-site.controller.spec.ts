import { Test, TestingModule } from '@nestjs/testing';
import { FactorySiteController } from './factory-site.controller';
import { FactorySiteService } from './factory-site.service';
import * as sessionService from '../session/session.service';

jest.mock('../session/session.service');

describe('FactorySiteController', () => {
  let controller: FactorySiteController;

  const mockProvider = {
    create: jest.fn((dto, token) => {
      if(!token) {
        const response = {
          status: '401',
          statusText: "Unauthorized",
          data: ''
        }
        const error = new Error('Unauthorized');
        error['response'] = response;
        throw error;
      } else if(!dto.type || !dto.properties) {
        const response = {
          status: 400,
          statusText: 'Bad Request',
          data: {
              "detail": "An entity type is mandatory",
              "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData",
              "title": "Bad Request Data."
          }
        }
        const error = new Error('Bad Request');
        error['response'] = response;
        throw error;
      } else {
        return {
          status: '201',
          statusText: "Created",
          data: ''
        }
      }
    }),
    findAll: jest.fn((token) => {
      return []
    }),
    findOne: jest.fn((id, token) => {
      return {}
    }),
    remove: jest.fn((id, token) => {
      return {
        status: '204',
        statusText: "No Content",
        data: ''
      }
    }),
    update: jest.fn((id, data, token) => {
      if(Object.keys(data).length == 0) {
        const response = {
          status: 500,
          statusText: "Internal Server Error",
          data: {
            "detail": "Index 0 out of bounds for length 0",
            "type": "https://uri.etsi.org/ngsi-ld/errors/InternalError",
            "title": "Internal error"
          }
        }
        const error = new Error('Internal error');
        error['response'] = response;
        throw error;
      } else if(data.hasOwnProperty("http://www.industry-fusion.org/schema#factoryname")) {
        const response = {
          status: 404,
          statusText: "Not Found",
          data: {
            "detail": "urn:ngsi-ld:factories:2:06 was not found",
            "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound",
            "title": "Resource not found."
          }
        }
        const error = new Error('Not Found');
        error['response'] = response;
        throw error;
      } else {
        return {
          status: '204',
          statusText: "No Content",
          data: ''
        }
      }
    })  
  }

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      controllers: [FactorySiteController],
      providers: [FactorySiteService],
    }).overrideProvider(FactorySiteService).useValue(mockProvider).compile();

    controller = module.get<FactorySiteController>(FactorySiteController);
  });

  it('should be defined', () => {
    expect(controller).toBeDefined();
  });

  const mockReq = {
    "title": "Factory Sites",
    "description": "Factory Site template for Fusion App",
    "type": "https://industry-fusion.org/types/v0.1/factorySite",
    "properties": {
        "factory_name": "factory A",
        "street": "street a",
        "zip": "12345",
        "country": "India",
        "thumbnail": "",
        "hasRoom": {
            "relationship": "https://industry-fusion.org/types/v0.1/siteRoom",
            "$ref": "room_schema.json"
        }
    }
  }
  const mockToken = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJoR3picUdnYnU3cHdxRXZYSHBYM19JTlFFVlpCMTBTVjh0SHNfSTJFSWJnIn0.eyJleHAiOjE3MzU5MDA4MzEsImlhdCI6MTcwNDM2NDgzMSwianRpIjoiMGQwOTkxZDMtMDgzZi00MDE3LThkZTktNzU3YmQ3ZDAwNjE0IiwiaXNzIjoiaHR0cHM6Ly9kZXZlbG9wbWVudC5pbmR1c3RyeS1mdXNpb24uY29tL2F1dGgvcmVhbG1zL2lmZiIsImF1ZCI6WyJvaXNwLWZyb250ZW5kIiwiZnVzaW9uLWJhY2tlbmQiLCJhY2NvdW50Il0sInN1YiI6IjMzMTE0OGNkLTM1MGUtNGIzZi04ZmZkLTRmMjQ1ZDBhY2I3MSIsInR5cCI6IkJlYXJlciIsImF6cCI6InNjb3JwaW8iLCJzZXNzaW9uX3N0YXRlIjoiODQxNzQ1OWMtNTBlOC00MTU3LWEwNGItYjgwZWIzYzdkNDEzIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImRlZmF1bHQtcm9sZXMtaWZmIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImZ1c2lvbi1iYWNrZW5kIjp7InJvbGVzIjpbIkZBQ1RPUllfTUFOQUdFUiIsIkZMRUVUX01BTkFHRVIiLCJFQ09TWVNURU1fTUFOQUdFUiJdfSwib2lzcC1mcm9udGVuZCI6eyJyb2xlcyI6WyJ1c2VyIl19LCJzY29ycGlvIjp7InJvbGVzIjpbIkZhY3RvcnktQWRtaW4iLCJGYWN0b3J5LVdyaXRlciIsIkZhY3RvcnktUmVhZGVyIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9pc3AtZnJvbnRlbmQgYWNjb3VudHMgZW1haWwgcHJvZmlsZSBvZmZsaW5lX2FjY2VzcyB0eXBlIiwic2lkIjoiODQxNzQ1OWMtNTBlOC00MTU3LWEwNGItYjgwZWIzYzdkNDEzIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInByZWZlcnJlZF91c2VybmFtZSI6ImZhY3RvcnlfYWRtaW4iLCJhY2NvdW50cyI6W3siaWQiOiJjNDcxMmMxNC1lZWVlLTQ4ODEtODU2ZS1jNWZiNTE1MzJjOTQiLCJyb2xlIjoiYWRtaW4ifV0sImdpdmVuX25hbWUiOiIiLCJ0eXBlIjoidXNlciIsImZhbWlseV9uYW1lIjoiIiwiZW1haWwiOiJmYWN0b3J5X2FkbWluQGluZHVzdHJ5LWZ1c2lvbi5jb20ifQ.tQ7xmGc33JsiiMaxpKxq8G5MSyxPAfOM_ZPDMLpfBEotgNWtmbgcbrrPG9H5u3gm70nHgHqauCA10MfKvW19aGzsCXhRWT0UcW1qpXb8KqNbvSaNwBdVXEN3nIidIJ0sfdXSpjq0S-oZ-gR6_1ZootNV_BSSBnbTZJuBb-q5dZmjHuQgHQY6UTs35yLsgwY_BFicWKwll7FIMV4pcSvAoB92_iT6Asty83reVxQnH60YmIw69fBV_6qgO7tstfMBtdGFdKd-iDYAnIPn2V3ic-u6HQbQboPeKgszPJXb5Y46dp5ulYcgcNfJdLeK7N24-tQEmgFVtOJdoVQDRr3XfA";


  it('should add factory site asset', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const result = await controller.create(mockReq, mockToken as any);
    expect(result).toEqual({
      "message": "Created",
      "status": "201",
      "success": true,
  })
  })

  it('post should return error 401', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(undefined);
    const result = await controller.create(mockReq, undefined);
    expect(result).toEqual({
      "message": "",
      "status": "401",
      "success": false,
    })
  })

  it('post should return Bad Request Data', async () => {
    const mockValue = {
      "title": "Factory Sites",
      "description": "Factory Site template for Fusion App",
      "properties": {
          "factory_name": "factory A",
          "street": "street a",
          "zip": "12345",
          "country": "India",
          "thumbnail": "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",
          "hasRoom": {
              "relationship": "https://industry-fusion.org/types/v0.1/siteRoom",
              "$ref": "room_schema.json"
          }
      }
    };
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const result = await controller.create(mockValue, mockToken as any);
    expect(result).toEqual({
      "success": false,
      "status": 400,
      "message": {
          "detail": "An entity type is mandatory",
          "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData",
          "title": "Bad Request Data."
      }
    })
  })

  it('should return all factory site assets', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const result = await controller.findAll(mockToken as any);
    expect(result).toEqual([])
  })

  it('should return factory site specific asset', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const id = 'urn:ngsi-ld:factories:2:06';
    const result = await controller.findOne(id, mockToken as any);
    expect(result).toEqual({})
  })

  it('should delete factory site specific asset', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const id = 'urn:ngsi-ld:factories:2:08';
    const result = await controller.remove(id, mockToken as any);
    expect(result).toEqual({
      success: true,
      status: "204",
      message: 'Deleted Successfully'
    })
  })

  it('should update factory site specific asset', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const id = 'urn:ngsi-ld:factories:2:06';
    const mockData = {
      "http://www.industry-fusion.org/schema#factory_name": {
          "type": "Property",
          "value": "factory B"
      }
  }
    const result = await controller.update(id, mockData, mockToken as any);
    expect(result).toEqual({
      success: true,
      status: "204",
      message: 'Updated Successfully'
    })
  })

  it('patch should return 500 Internal error', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const id = 'urn:ngsi-ld:factories:2:06';
    const mockData = {};
    const result = await controller.update(id, mockData, mockToken as any);
    expect(result).toEqual({
      "success": false,
      "status": 500,
      "message": {
          "detail": "Index 0 out of bounds for length 0",
          "type": "https://uri.etsi.org/ngsi-ld/errors/InternalError",
          "title": "Internal error"
      }
    })
  })

  it('patch should return 404 Resource not found', async () => {
    (sessionService.getSessionToken as jest.Mock).mockResolvedValue(mockToken);
    const id = 'urn:ngsi-ld:factories:2:06';
    const mockData = {
      "http://www.industry-fusion.org/schema#factoryname": {
          "type": "Property",
          "value": "factory B"
      }
  }
    const result = await controller.update(id, mockData, mockToken as any);
    expect(result).toEqual({
      "success": false,
      "status": 404,
      "message": {
          "detail": "urn:ngsi-ld:factories:2:06 was not found",
          "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound",
          "title": "Resource not found."
      }
    })
  })

});
